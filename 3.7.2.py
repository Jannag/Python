"""
В какой-то момент в Институте биоинформатики биологи перестали понимать, что говорят информатики: они говорили каким-то
странным набором звуков. В какой-то момент один из биологов раскрыл секрет информатиков: они использовали при общении
подстановочный шифр, т.е. заменяли каждый символ исходного сообщения на соответствующий ему другой символ. Биологи
раздобыли ключ к шифру и теперь нуждаются в помощи:

Напишите программу, которая умеет шифровать и расшифровывать шифр подстановки. Программа принимает на вход две строки
динаковой длины, на первой строке записаны символы исходного алфавита, на второй строке — символы конечного алфавита,
после чего идёт строка, которую нужно зашифровать переданным ключом, и ещё одна строка, которую нужно расшифровать.

Пусть, например, на вход программе передано:
abcd
*d%#
abacabadaba
#*%*d*%

Это значит, что символ a исходного сообщения заменяется на символ * в шифре, b заменяется на d, c — на % и d — на #.
Нужно зашифровать строку abacabadaba и расшифровать строку #*%*d*% с помощью этого шифра. Получаем следующие строки,
которые и передаём на вывод программы:
*d*%*d*#*d*
dacabac
﻿
Sample Input 1:
abcd
*d%#
abacabadaba
#*%*d*%

Sample Output 1:
*d*%*d*#*d*
dacabac

Sample Input 2:
dcba
badc
dcba
badc

Sample Output 2:
badc
dcba
"""
s = input()  # исходный алфавит
x = input()  # конечный алфавит
a = input()  # строка, которую нужно зашифровать
b = input()  # строка, которую нужно расшифровать
d1 = dict(zip(s, x))  # словарь для зашифровки
d2 = dict(zip(x, s))  # словарь для расшифровки
ax = ''  # зашифрованная строка a
bs = ''  # расшифрованная строка b
for i in a:
    ax += d1[i]
for i in b:
    bs += d2[i]
print(ax)
print(bs)
